* MCATutor
  Lauren Becker, Daniel Brett, Isaiah Rawlinson
* System Requirements and Usage
  MCATutor depends on several libraries and protocols available only
  in python 3.x

  Python libraries needed:
  - Flask
  - ChatterBot

  To start MCATutor, run the python file located in the folder titled
  MCATFlask.
  #+BEGIN_SRC sh
python3 mcatutor.py
  #+END_SRC
  In your browser, navigate to the URL displayed in the terminal. To
  get a personalized exam, you will need to answer and get at least
  one question correct in each of the 4 subjects.

  At any time answering questions, enter "quit" into the dialog to
  stop answering questions and get a summary of your progress so far.
  In this summary, if you have completed enough questions, an exam
  will be prepared and MCATutor will prompt you with an option to take
  it.

* Goals and Features
** Term Project
*** Collect and Process Questions
    - Use card decks from Quizlet
      + Crowd-sourced collection of questions
      + Taking advantage of the API for easily extensible scraping
    - Scraper
      + Pair questions with answers
    - Put results into database for chat bot
*** Chatbot
    - Ask test question, receive answer from user
      + Pull question and answers
    - Ask user what style of question they want to practice
      + Multiple choice, short answer, etc.
    - Ask user what topic they want to practice
      + Biology, chemistry, physics, behavioral sciences
*** AI
    - Constraint satisfaction
      + Develop equal proficiency in all topics and question styles
        - Suggest topics the user should study more
        - Give the user more questions that they will find difficult
          to give them better practice with the topics and question
          styles
      + What topics does the user have trouble with?
      + Does the user do well with multiple choice but struggle with
        short answer questions?
    - Machine learning
      + Train the bot to recognize correct answers on it's own through
        guided learning
** Stretch and Post-Semester Goals
   - Collect relevant materials
     + Google results for user to learn more about the topic
     + Specific results
     + Use natural language tools to find key words and phrases in the
       question
   - Train the scraper to identify the topic of a given question to
     quickly sort data and increase the number of usable questions
   - Build a website for the application with a more
     friendly/intuitive UI
     + Domain: http://mcatutor.com/
